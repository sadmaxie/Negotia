/* Custom CSS for your project */

/* Body background image */
body {
    background-image: url('../images/images/background.png');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    /* Tailwind already sets min-h-screen, flex, flex-col on body
       You can add other non-Tailwind specific body styles here if needed.
       For instance, if you want a fallback background color: */
    background-color: #000; /* Fallback for when image isn't loaded */
}

/* Utility class for hiding elements, essential for JS show/hide */
.hidden {
    display: none !important;
}

/* Glow-on-Hover Button Styles */
.glow-on-hover {
    width: 220px;
    height: 50px;
    border: none;
    outline: none;
    color: #fff;
    background: #111;
    cursor: pointer;
    position: relative;
    z-index: 0;
    border-radius: 10px;
    font-weight: bold; /* Added for better readability as in previous example */
    font-size: 1rem; /* Added for better readability as in previous example */
    transition: background 0.3s ease; /* Smooth transition for background */
}

.glow-on-hover:before {
    content: '';
    background: linear-gradient(45deg, #ff0000, #ff7300, #fffb00, #48ff00,
                                 #00ffd5, #002bff, #7a00ff, #ff00c8, #ff0000);
    position: absolute;
    top: -2px;
    left: -2px;
    background-size: 400%;
    z-index: -1;
    filter: blur(5px);
    width: calc(100% + 4px);
    height: calc(100% + 4px);
    animation: glowing 20s linear infinite;
    opacity: 0;
    transition: opacity .3s ease-in-out;
    border-radius: 10px;
}

/* Added active state for glow-on-hover, which was missing in your provided snippet but good for UX */
.glow-on-hover:active {
    color: #000; /* Example: text color changes when active */
}

.glow-on-hover:active:after {
    background: transparent; /* Makes the glow visible when active */
}

.glow-on-hover:hover:before {
    opacity: 1;
}

.glow-on-hover:after {
    z-index: -1;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: #111;
    left: 0;
    top: 0;
    border-radius: 10px;
}

@keyframes glowing {
    0% {
        background-position: 0 0;
    }
    50% {
        background-position: 400% 0;
    }
    100% {
        background-position: 0 0;
    }
}

/* Style for the new currency dropdown (using Tailwind classes in JS, so no custom CSS needed here unless you want to override) */
/* If you want to add specific custom styles not covered by Tailwind, you would add them here. */
/* Example (commented out as it's handled by Tailwind in JS): */
/* .currency-select-tailwind-style {
    background-color: rgb(17 24 39 / var(--tw-bg-opacity));
    color: #fff;
    border: 1px solid rgb(55 65 81 / var(--tw-border-opacity));
    border-radius: 0.5rem;
    padding: 0.5rem 1rem;
    font-size: 1rem;
    cursor: pointer;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2212%22%20height%3D%2212%22%20viewBox%3D%220%200%2012%2012%22%3E%3Cpath%20fill%3D%22%23ffffff%22%20d%3D%22M4.94%206.57L7.06%204.44%207.94%205.32%204.94%208.32%202.06%205.44%202.94%204.57z%22%2F%3E%3C%2Fsvg%3E");
    background-repeat: no-repeat;
    background-position: right 0.7em center;
    background-size: 0.8em auto;
}

.currency-select-tailwind-style:focus {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
} */

/* Custom dark scrollbar for modern browsers */
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  background: #1f2937; /* Tailwind's gray-800 */
}

::-webkit-scrollbar-thumb {
  background-color: #4b5563; /* Tailwind's gray-600 */
  border-radius: 6px;
  border: 2px solid #1f2937;
}

::-webkit-scrollbar-thumb:hover {
  background-color: #6b7280; /* Tailwind's gray-500 */
}

* {
  scrollbar-width: thin;
  scrollbar-color: #4b5563 #1f2937;
}

/* Remove arrows from number inputs (Chrome, Safari, Edge) */
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}
